.header {
  background-color: #161b22; /* 常に黒系背景 */
  color: #e1e1e1; /* 常に明るいテキスト */
  padding: 1rem 0;
  position: relative;
  z-index: 100; /* ベースとなるz-index */
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
  border-bottom: 1px solid #30363d;
}

.container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 15px;
}

.logo {
  cursor: pointer;
  transition: opacity 0.3s ease;
  position: relative;
  z-index: 1;
}

.logo:hover {
  opacity: 0.8;
}

.logoContent {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  position: relative;
}

/* ロゴ画像コンテナ */
.logoImageContainer {
  display: block;
  transition: transform 0.3s ease;
}

.logoImageContainer:hover {
  transform: scale(1.02);
}

.logoImage {
  height: auto;
  max-width: 100%;
  display: block;
}

/* テキストロゴ（フォールバックまたは併用） */
.textLogo {
  display: none; /* 画像ロゴ使用時は非表示 */
}

/* 画像ロゴが読み込めない場合のフォールバック */
.logoImage[data-error="true"] + .textLogo {
  display: block;
}

.siteName {
  font-size: 1.8rem;
  font-weight: 700;
  margin: 0;
  background: linear-gradient(90deg, var(--accent-color), var(--secondary-color));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  line-height: 1.2;
}

.tagline {
  font-size: 0.7rem;
  margin: -2px 0 0 0;
  color: #8b949e; /* 薄いグレー */
  font-weight: 400;
  letter-spacing: 0.5px;
}

/* ヘッダーアクション部分 */
.headerActions {
  display: flex;
  align-items: center;
  gap: 1.5rem;
}

.themeToggleContainer {
  display: flex;
  align-items: center;
}

/* モバイルメニューヘッダー */
.mobileMenuHeader {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem;
  border-bottom: 1px solid #30363d;
  margin-bottom: 1rem;
  background-color: #161b22;
  min-height: 60px;
}

/* ナビゲーション */
.nav {
  display: flex;
}

.navList {
  display: flex;
  list-style: none;
  gap: 1.5rem;
  margin: 0;
  padding: 0;
}

.navItem {
  position: relative;
}

.navLink {
  color: #e1e1e1; /* 常に明るいテキスト */
  text-decoration: none;
  font-weight: 500;
  font-size: 0.9rem;
  transition: all 0.3s ease;
  padding: 0.6rem 0.8rem;
  border-radius: 6px;
  position: relative;
  cursor: pointer;
  display: block;
}

.navLink:hover {
  background-color: var(--secondary-color);
  color: white;
  transform: translateY(-1px);
}

/* ドロップダウンメニュー */
.dropdown {
  position: relative;
}

.dropdown::before {
  content: '';
  position: absolute;
  top: 100%;
  left: -10px;
  right: -10px;
  height: 10px;
  background: transparent;
  z-index: 999;
}

.dropdownContent {
  display: none;
  position: absolute;
  top: calc(100% + 8px);
  left: -10px;
  background-color: #21262d; /* 黒系背景 */
  border: 1px solid #30363d;
  border-radius: 8px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.4);
  min-width: 200px;
  max-width: 280px;
  z-index: 1000;
  padding: 0.5rem 0;
  opacity: 0;
  transform: translateY(-10px);
  transition: opacity 0.2s ease, transform 0.2s ease;
  max-height: 400px;
  overflow-y: auto;
}

.dropdown:hover .dropdownContent,
.dropdown:focus-within .dropdownContent {
  display: block;
  opacity: 1;
  transform: translateY(0);
}

.dropdownContent:hover {
  display: block;
  opacity: 1;
  transform: translateY(0);
}

.dropdownItem {
  display: block;
  padding: 0.8rem 1rem;
  color: #e1e1e1; /* 明るいテキスト */
  text-decoration: none;
  transition: all 0.2s ease;
  cursor: pointer;
  font-size: 0.85rem;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  white-space: nowrap;
}

.dropdownItem:hover {
  background-color: #30363d;
  color: var(--secondary-color);
  transform: translateX(5px);
}

.dropdown .navLink::after {
  content: '▼';
  font-size: 0.7rem;
  margin-left: 0.5rem;
  transition: transform 0.2s ease;
}

.dropdown:hover .navLink::after {
  transform: rotate(180deg);
}

/* モバイルハンバーガーメニューボタン */
.mobileMenuButton {
  display: none;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 40px;
  height: 40px;
  background: none;
  border: none;
  cursor: pointer;
  padding: 0;
  position: relative;
  z-index: 1;
  transition: transform 0.3s ease;
}

.mobileMenuButton:hover {
  transform: scale(1.1);
}

.hamburgerLine {
  width: 25px;
  height: 3px;
  background-color: #e1e1e1; /* 明るいライン */
  margin: 3px 0;
  transition: all 0.3s ease;
  transform-origin: center;
}

.mobileMenuButton.active .hamburgerLine:nth-child(1) {
  transform: rotate(45deg) translate(9px, 9px);
}

.mobileMenuButton.active .hamburgerLine:nth-child(2) {
  opacity: 0;
}

.mobileMenuButton.active .hamburgerLine:nth-child(3) {
  transform: rotate(-45deg) translate(9px, -9px);
}

/* モバイルメニューオーバーレイ */
.mobileMenuOverlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.7);
  z-index: 998;
}

/* モバイルメニュー */
.mobileMenu {
  display: none;
  position: fixed;
  top: 0;
  right: -100%;
  width: 280px;
  height: 100vh;
  background-color: #161b22; /* 黒系背景 */
  border-left: 1px solid #30363d;
  z-index: 999; /* 検索ボックスより低く設定 */
  transition: right 0.3s ease-in-out;
  padding-top: 0;
  box-shadow: -5px 0 15px rgba(0, 0, 0, 0.3);
}

.mobileMenu.open {
  right: 0;
}

.mobileNavList {
  list-style: none;
  padding: 1rem 0;
  margin: 0;
  height: calc(100vh - 80px);
  overflow-y: auto;
}

.mobileNavItem {
  border-bottom: 1px solid #30363d;
}

.mobileNavItem:last-child {
  border-bottom: none;
}

.mobileNavLink {
  display: flex;
  align-items: center;
  color: #e1e1e1; /* 明るいテキスト */
  text-decoration: none;
  padding: 1.2rem 1.5rem;
  font-weight: 500;
  font-size: 1rem;
  transition: all 0.3s ease;
  cursor: pointer;
}

.mobileNavLink:hover,
.mobileNavLink:active {
  background-color: #21262d;
  color: var(--secondary-color);
}

.categoryIcon {
  margin-right: 0.8rem;
  font-size: 1.2rem;
  min-width: 24px;
  text-align: center;
}

/* 検索展開時にヘッダー要素を後ろに配置 */
.header:has(.searchContainer.expanded) .logo,
.header:has(.searchContainer.expanded) .mobileMenuButton,
.header:has(.searchContainer.expanded) .headerActions > *:not(.searchContainer) {
  z-index: 1 !important;
}


/* レスポンシブ対応 */
@media (max-width: 768px) {
  .container {
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
  }

  .logoImageContainer {
    transform: scale(0.8);
    transform-origin: left center;
  }

  .siteName {
    font-size: 1.5rem;
  }

  .tagline {
    font-size: 0.65rem;
  }

  .nav {
    display: none;
  }

  .mobileMenuButton {
    display: flex;
  }

  .mobileMenuOverlay {
    display: block;
    z-index: 998;
  }

  .mobileMenu {
    display: block;
  }

  .headerActions {
    gap: 1rem;
  }
  
  /* モバイル時もテーマトグルを表示 */
  .themeToggleContainer {
    display: flex;
  }
  
  .mobileMenuHeader {
    display: flex; /* モバイルメニュー内でも表示 */
  }
}

/* デスクトップでのモバイルメニューヘッダー非表示 */
@media (min-width: 769px) {
  .mobileMenuHeader {
    display: none;
  }
}

@media (max-width: 576px) {
  .header {
    padding: 0.8rem 0;
  }

  .logoImageContainer {
    transform: scale(0.7);
    transform-origin: left center;
  }

  .siteName {
    font-size: 1.3rem;
  }

  .tagline {
    font-size: 0.6rem;
  }

  .container {
    padding: 0 10px;
  }

  .mobileMenu {
    width: 260px;
  }
  
  .headerActions {
    gap: 0.8rem;
  }
}

@media (max-width: 480px) {
  .headerActions {
    gap: 0.5rem;
  }
  
  .mobileMenu {
    width: 240px;
  }
}

body.menu-open {
  overflow: hidden;
}

/* ドロップダウンのスクロールバー調整 */
.dropdownContent::-webkit-scrollbar {
  width: 6px;
}

.dropdownContent::-webkit-scrollbar-track {
  background: #21262d;
}

.dropdownContent::-webkit-scrollbar-thumb {
  background: #30363d;
  border-radius: 3px;
}

.dropdownContent::-webkit-scrollbar-thumb:hover {
  background: #484f58;
}

/* 検索コンテナのスタイル調整 */
.searchContainer {
  display: flex;
  align-items: center;
  margin-left: 15px;
  position: relative;
  z-index: 2; /* 他のヘッダー要素より少し高く */
}

/* ヘッダーアクションの調整 */
.headerActions {
  display: flex;
  align-items: center;
  gap: 0;
  position: relative;
  z-index: 1;
}

/* ナビゲーションとの間隔調整 */
.nav {
  margin-right: 15px;
}

/* テーマトグルコンテナの調整 */
.themeToggleContainer {
  margin-left: 15px;
}

/* モバイルでの検索ボタン調整 */
@media (max-width: 768px) {
  .headerActions {
    gap: 8px;
  }
  
  .searchContainer {
    margin-left: 8px;
  }
  
  .themeToggleContainer {
    margin-left: 8px;
  }
  
  .nav {
    display: none; /* モバイルではナビゲーションを非表示 */
  }
}

/* デスクトップでのレイアウト調整 */
@media (min-width: 769px) {
  .headerActions {
    display: flex;
    align-items: center;
  }
  
  .nav {
    margin-right: 15px;
  }
  
  .themeToggleContainer {
    margin-left: 15px;
  }
}

/* 検索展開時にドロップダウンを無効化 */
.header:has(.searchContainer.expanded) .dropdown:hover .dropdownContent,
.header:has(.searchContainer.expanded) .dropdown:focus-within .dropdownContent {
  display: none !important;
  opacity: 0 !important;
  pointer-events: none !important;
}

.header:has(.searchContainer.expanded) .dropdown .dropdownContent:hover {
  display: none !important;
  opacity: 0 !important;
  pointer-events: none !important;
}

/* 検索展開時のドロップダウン矢印も無効化 */
.header:has(.searchContainer.expanded) .dropdown:hover .navLink::after {
  transform: none !important;
}

/* 検索展開時にナビゲーション要素を無効化 */
.header:has(.searchContainer.expanded) .nav {
  pointer-events: none !important;
}

.header:has(.searchContainer.expanded) .navLink {
  pointer-events: none !important;
  opacity: 0.3 !important;
}

.header:has(.searchContainer.expanded) .navLink:hover {
  background-color: transparent !important;
  color: #e1e1e1 !important;
  transform: none !important;
}

.header:has(.searchContainer.expanded) .dropdown {
  pointer-events: none;
}

/* 最小画面時のヘッダー調整 */
@media (max-width: 480px) {
  .headerActions {
    gap: 4px; /* ギャップをさらに縮小 */
  }
  
  .searchContainer {
    margin-left: 4px; /* マージンを縮小 */
  }
  
  .themeToggleContainer {
    margin-left: 4px; /* マージンを縮小 */
  }
}

@media (max-width: 320px) {
  .headerActions {
    gap: 2px;
  }
  
  .searchContainer {
    margin-left: 2px;
  }
  
  .themeToggleContainer {
    margin-left: 2px;
  }
}

/* src/components/Header/Header.module.css に追加 */

/* クラスベースでのドロップダウン制御（フォールバック） */
.header.search-expanded .dropdown:hover .dropdownContent,
.header.search-expanded .dropdown:focus-within .dropdownContent,
.header.search-expanded .dropdown .dropdownContent:hover {
  display: none !important;
  opacity: 0 !important;
  pointer-events: none !important;
}

.header.search-expanded .nav {
  pointer-events: none;
}

.header.search-expanded .navLink {
  pointer-events: none;
  opacity: 0.5;
}

.header.search-expanded .dropdown {
  pointer-events: none;
}

.header.search-expanded .dropdown:hover .navLink::after {
  transform: none !important;
}

/* データ属性ベースでのドロップダウン完全無効化 */
header[data-search-expanded="true"] .dropdown,
header[data-search-expanded="true"] .dropdown:hover,
header[data-search-expanded="true"] .dropdown:focus-within {
  pointer-events: none !important;
}

header[data-search-expanded="true"] .dropdown .dropdownContent,
header[data-search-expanded="true"] .dropdown:hover .dropdownContent,
header[data-search-expanded="true"] .dropdown:focus-within .dropdownContent,
header[data-search-expanded="true"] .dropdown .dropdownContent:hover {
  display: none !important;
  opacity: 0 !important;
  visibility: hidden !important;
  pointer-events: none !important;
  transform: translateY(-20px) !important;
}

header[data-search-expanded="true"] .dropdown .navLink::after {
  transform: none !important;
}

header[data-search-expanded="true"] .nav {
  pointer-events: none !important;
}

header[data-search-expanded="true"] .navLink {
  pointer-events: none !important;
  opacity: 0.3 !important;
  cursor: default !important;
}

header[data-search-expanded="true"] .navLink:hover {
  background-color: transparent !important;
  color: #e1e1e1 !important;
  transform: none !important;
}

/* 追加: CSSクラスベースの制御も保持 */
.header:has(.searchContainer.expanded) .dropdown,
.header:has(.searchContainer.expanded) .dropdown:hover,
.header:has(.searchContainer.expanded) .dropdown:focus-within {
  pointer-events: none !important;
}

.header:has(.searchContainer.expanded) .dropdown .dropdownContent,
.header:has(.searchContainer.expanded) .dropdown:hover .dropdownContent,
.header:has(.searchContainer.expanded) .dropdown:focus-within .dropdownContent,
.header:has(.searchContainer.expanded) .dropdown .dropdownContent:hover {
  display: none !important;
  opacity: 0 !important;
  visibility: hidden !important;
  pointer-events: none !important;
}
